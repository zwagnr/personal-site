---
import Nav from "../../components/Nav.astro";
import Layout from "../../layouts/Layout.astro";
import Card from "../../components/Card.astro";
import { Icon } from "astro-icon";
import { clsx } from "clsx";

export interface TechStack {
  name: string;
  icon: string;
  glow: string;
}

const techStack: TechStack[] = [
  { name: "Typescript", icon: "typescript", glow: "shadow-xl shadow-blue-200" },
  { name: "React", icon: "react", glow: "shadow-xl shadow-sky-100" },
  {
    name: "GQL Request",
    icon: "logos:graphql",
    glow: "shadow-xl shadow-pink-100 p-2",
  },
  { name: "NextJS", icon: "logos:nextjs-icon", glow: "shadow-xl shadow-neutral-300 p-2" },
  { name: "TailwindCSS", icon: "logos:tailwindcss-icon", glow: "shadow-xl shadow-emerald-100 p-2" },
  { name: "HeadlessUI", icon: "headless", glow: "shadow-xl shadow-blue-100 p-2" },
  { name: "ChartJS", icon: "file-icons:chartjs", glow: "shadow-xl shadow-neutral-300 p-2" },
  { name: "Vercel", icon: "tabler:brand-vercel", glow: "shadow-xl shadow-neutral-300 p-2" },
];
---

<script>
  let currentTheme = document.documentElement.attributes.getNamedItem("data-theme")?.value;
  const img = document.getElementById("filter-img");
  //currentTheme === "light" ? (img.src = "/dhFiltersLight.png") : (img.src = "/dhFiltersDark.png");
</script>

<Layout title="projects">
  <div class="flex w-full max-w-7xl flex-col justify-start gap-0 overflow-auto p-8 md:p-0">
    <!-- ====== About Section Start -->
    <section class="overflow-hidden">
      <div class="container mx-auto">
        <div class="-mx-4 flex flex-wrap items-center justify-between">
          <div class="mt-24 w-full px-4">
            <div class="lg:mt-0">
              <h2 class="text-dark mb-8 text-6xl font-bold">Deck Hub</h2>
              <p class="mb-8 text-lg">
                A deck builder app for <a
                  href="https://parallel.life/"
                  target="_blank"
                  rel="noopener noreferrer"
                  class="underline">Parallel,</a
                >
                a digital card game similar to Magic the Gathering, or Hearthstone.
              </p>
              <div class="flex gap-8">
                <div class="flex">
                  <a
                    href=""
                    target="_blank"
                    rel="noopener noreferrer"
                    class="relative inline-flex items-center justify-center rounded-br-lg border border-transparent text-sm font-medium text-gray-700 hover:text-gray-500">
                    <Icon name="mdi:github" class="w-6 h-6" />
                    <span class="ml-1 text-lg font-bold">Code</span>
                  </a>
                </div>
                <div class="flex">
                  <a
                    href=""
                    target="_blank"
                    rel="noopener noreferrer"
                    class="relative inline-flex items-center justify-center rounded-br-lg border border-transparent text-sm font-medium text-gray-700 hover:text-gray-500">
                    <Icon name="iconoir:www" class="w-6 h-6" />
                    <span class="ml-1 text-lg font-bold">Live</span>
                  </a>
                </div>
              </div>
            </div>
          </div>
          <div class="w-full lg:w-4/6">
            <div class="-mx-3 flex items-center sm:-mx-4">
              <div class="flex w-full items-center justify-center p-4"></div>
            </div>
          </div>
        </div>
      </div>
    </section>
    <div class="mb-16 p-4">
      <img src="/deckHub.png" alt="" class="w-full rounded-lg shadow-xl shadow-neutral-400" />
    </div>
    <!-- ====== About Section End -->
    <ul
      class="mx-auto mb-12 flex w-3/4 flex-wrap items-center justify-center gap-8 rounded-xl border p-4 shadow-lg">
      {
        techStack.map((tech) => (
          <li class="flex items-center gap-2 p-2">
            {tech.name === "AuthJS" ? (
              <img src="/authJS.png" class="h-10 w-10" />
            ) : (
              <div
                class={clsx(
                  tech.glow,
                  "flex h-16 w-16 items-center justify-center rounded-2xl bg-slate-200"
                )}>
                <Icon name={tech.icon} class="h-16 w-16" />
              </div>
            )}
          </li>
        ))
      }
    </ul>
    <div class="w-5xl mt-8 flex flex-col gap-8">
      <div class="flex w-full flex-col items-center gap-16">
        <div class="flex w-full flex-col gap-8">
          <p class="mb-4 text-4xl font-bold">Did we really need another one?</p>
          <div class="flex w-full justify-center">
            <div class="flex w-full flex-row items-center gap-8 text-lg md:w-full">
              <div class="flex w-full md:w-1/2 flex-col gap-8">
                <p>
                  It's true that there are several other deck builders in existance. However, they
                  all lack the visual deck building aspect that I love.
                </p>
                <p>
                  For me, it is much easier to keep track of the cards in my deck or identify the
                  ones that need to be changed if I can see them visually. Other deck builders
                  usually represent the active deck by showing only the card name and the numerical
                  count of each card. However, I prefer a visual representation of my deck, which
                  was a significant motivation for building this app.
                </p>
              </div>
            </div>
          </div>
        </div>
        <div class="flex w-full flex-col gap-8">
          <p class="mb-4 text-4xl font-bold">Hover Me!</p>
          <div class="flex w-full justify-center">
            <div class="flex w-full flex-col items-center gap-8 text-lg md:w-full">
              <div class="flex w-full items-start justify-center gap-8">
                <img
                  id="toggles"
                  src="/hoverCard.png"
                  alt="toggles"
                  class="w-3/4 rounded-md object-scale-down shadow-lg"
                />
              </div>

              <div class="flex w-full lg:w-1/2 flex-col gap-8">
                <p>
                  With the hover toggle enabled anytime you hover over a card the above card pops
                  up. It displays detailed information about each card including it's in game stats.
                  I also added a toggle for this feature. This way a user can choose to see the
                  hovers or not.
                </p>
                <p>
                  To ensure accessibility standards and functionality, I used the Radix UI Hover
                  Card Primitive.
                </p>
              </div>
            </div>
          </div>
        </div>
        <div class="flex w-full flex-col gap-8">
          <p class="mb-4 text-4xl font-bold">Filters, Filters, Filters</p>
          <div class="flex w-full justify-center">
            <div class="flex w-full flex-row items-center gap-8 text-lg md:w-full">
              <img
                id="filter-img"
                src="/dhFilters.png"
                alt=""
                class="w-1/2 rounded-md object-scale-down shadow-lg"
              />
              <div class="flex w-1/2 flex-col gap-8">
                <p>
                  Handling the state for almost 30 unique card filter options was quite challenging
                  for me.
                </p>
                <p>
                  I used React's useEffect hook to re set all filter state each time a filter was
                  added or removed. This way the displayed cards updated correctly in real-time.
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <br />
  </div>
</Layout>
